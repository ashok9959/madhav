<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-03T12:14:20 IST" name="Default suite" finished-at="2024-11-03T12:14:20 IST" duration-ms="197">
    <groups>
    </groups>
    <test started-at="2024-11-03T12:14:20 IST" name="Default test" finished-at="2024-11-03T12:14:20 IST" duration-ms="197">
      <class name="com.ashok.service.WorkflowServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ashok.service.WorkflowServiceTest@16612a51]" started-at="2024-11-03T12:14:20 IST" name="setUp" finished-at="2024-11-03T12:14:20 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addWorkflowWhenWorkflowAlreadyExists()[pri:0, instance:com.ashok.service.WorkflowServiceTest@16612a51]" started-at="2024-11-03T12:14:20 IST" name="addWorkflowWhenWorkflowAlreadyExists" finished-at="2024-11-03T12:14:20 IST" duration-ms="14" status="PASS">
          <exception class="com.ashok.exception.BusinessValidationException">
            <message>
              <![CDATA[workflow is already exists..]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.ashok.exception.BusinessValidationException: workflow is already exists..
at com.ashok.service.WorkflowService.addWorkflow(WorkflowService.java:21)
at com.ashok.service.WorkflowServiceTest.addWorkflowWhenWorkflowAlreadyExists(WorkflowServiceTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.ashok.exception.BusinessValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addWorkflowWhenWorkflowAlreadyExists -->
        <test-method signature="addWorkflowWhenWorkflowCreatedSuccessfully()[pri:0, instance:com.ashok.service.WorkflowServiceTest@16612a51]" started-at="2024-11-03T12:14:20 IST" name="addWorkflowWhenWorkflowCreatedSuccessfully" finished-at="2024-11-03T12:14:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addWorkflowWhenWorkflowCreatedSuccessfully -->
        <test-method signature="updateWorkflowWhenWorkflowCreatedSuccessfully()[pri:0, instance:com.ashok.service.WorkflowServiceTest@16612a51]" started-at="2024-11-03T12:14:20 IST" name="updateWorkflowWhenWorkflowCreatedSuccessfully" finished-at="2024-11-03T12:14:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkflowWhenWorkflowCreatedSuccessfully -->
        <test-method signature="updateWorkflowWhenWorkflowDoesNotExists()[pri:0, instance:com.ashok.service.WorkflowServiceTest@16612a51]" started-at="2024-11-03T12:14:20 IST" name="updateWorkflowWhenWorkflowDoesNotExists" finished-at="2024-11-03T12:14:20 IST" duration-ms="1" status="PASS">
          <exception class="com.ashok.exception.BusinessValidationException">
            <message>
              <![CDATA[workflow doesn't exists..]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.ashok.exception.BusinessValidationException: workflow doesn't exists..
at com.ashok.service.WorkflowService.updateWorkflow(WorkflowService.java:30)
at com.ashok.service.WorkflowServiceTest.updateWorkflowWhenWorkflowDoesNotExists(WorkflowServiceTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.ashok.exception.BusinessValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWorkflowWhenWorkflowDoesNotExists -->
      </class> <!-- com.ashok.service.WorkflowServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
